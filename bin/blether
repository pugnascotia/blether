#!/usr/bin/env node

// Chrome debugging, IIRC
if (global.v8debug) {
	global.v8debug.Debug.setBreakOnException(); // speaks for itself
}

var path = require('path');
var fs   = require('fs');
var lib  = path.join(path.dirname(fs.realpathSync(__filename)), '../build');
var _eval = require("eval");

var argv = require('minimist')(process.argv.slice(2), {
    'boolean': [ 'x' ],
    '--': true
});

var blether = require(lib + "/blether.min.js");

if (argv.x && argv._) {

    var translate = function(aFile) {
        var text = fs.readFileSync(aFile).toString();
        if (/^#!/.test(text)) {
            text = text.replace(/^#!.*$/m, '');
        }
        return blether.translate(text);
    };

    try {
        var javascript = argv._.map(translate).join();
        _eval(javascript, "<argv>", null, true);
    }
    catch (e) {
        console.log("Failed at line [" + e.line + "], column [" + e.column + "]: " + e);
        console.log(e);
        process.exit();
    }
}
else {
    argv._.forEach(function(eachArg) {

        var text = fs.readFileSync(eachArg).toString();

        try {
            var js = blether.translate(text);
            console.log(js);
        }
        catch (e) {
            console.log("Failed at line [" + e.line + "], column [" + e.column + "]: " + e);
            console.log(e);
            process.exit();
        }
    });
}
